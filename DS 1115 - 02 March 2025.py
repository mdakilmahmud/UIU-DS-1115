# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qe5uxqOQzarAU_uZvXGamaruRqLLqQI6
"""

class Student:
    """
    A class representing a student with a name, student ID, and password.
    The student ID and password are private attributes.
    """

    def __init__(self, name: str, student_id: int, password: str):
        """
        Initializes a Student object with the given name, student ID, and password.

        :param name: The name of the student (string).
        :param student_id: The unique student ID (integer).
        :param password: The password for authentication (string).
        """
        self.name = name  # Public attribute for the student's name
        self.__student_id = student_id  # Private attribute for student ID
        self.__password = password  # Private attribute for password

    def show_details(self):
        """
        Displays the student's name and student ID.
        The student ID is accessed within the class despite being private.
        """
        print(f"Student Name: {self.name}; Student ID: {self.__student_id}")

    def get_student_id(self):
        """
        Getter method for retrieving the private student ID.

        :return: The student ID (integer).
        """
        return self.__student_id

    def set_student_id(self, new_id: int, password: str):
        """
        Updates the student ID if the correct password is provided.

        :param new_id: The new student ID (integer).
        :param password: The password for authentication (string).
        """
        if password == self.__password:
            self.__student_id = new_id
            print("Student ID Updated")
        else:
            print("Incorrect Password")

    def __str__(self):
        """
        Returns a string representation of the Student object.

        :return: A formatted string containing the student's name and ID.
        """
        return f"Student Name: {self.name}; Student ID: {self.__student_id}"

student1 = Student("John Doe", 12345, "password123")
print(student1.name)
print(student1.get_student_id())
student1.set_student_id(54321, "wrongpassword")
student1.set_student_id(54321, "password123")
print(student1.get_student_id())
print(student1)